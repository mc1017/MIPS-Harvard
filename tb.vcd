$date
	Mon Dec  6 18:58:24 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 32 ! register_v0 [31:0] $end
$var wire 32 " instr_address [31:0] $end
$var wire 32 # data_writedata [31:0] $end
$var wire 1 $ data_write $end
$var wire 32 % data_readdata [31:0] $end
$var wire 1 & data_read $end
$var wire 32 ' data_address [31:0] $end
$var wire 1 ( active $end
$var reg 1 ) clk $end
$var reg 1 * clk_enable $end
$var reg 32 + instr_readdata [31:0] $end
$var reg 1 , reset $end
$scope module dm $end
$var wire 1 ) clk $end
$var wire 1 * clock_enable $end
$var wire 1 , reset $end
$var wire 32 - write_data [31:0] $end
$var wire 1 $ write $end
$var wire 1 & read $end
$var wire 32 . address [31:0] $end
$var reg 32 / c [31:0] $end
$var reg 32 0 read_data [31:0] $end
$upscope $end
$scope module dut $end
$var wire 1 ) clk $end
$var wire 1 * clk_enable $end
$var wire 32 1 data_readdata [31:0] $end
$var wire 32 2 instr_address [31:0] $end
$var wire 32 3 instr_readdata [31:0] $end
$var wire 32 4 instruction [31:0] $end
$var wire 1 , reset $end
$var wire 1 5 unsign $end
$var wire 32 6 target [31:0] $end
$var wire 1 7 regwrite $end
$var wire 1 8 regdst $end
$var wire 32 9 reg_write_data_3 [31:0] $end
$var wire 32 : reg_write_data_2 [31:0] $end
$var wire 32 ; reg_write_data [31:0] $end
$var wire 5 < reg_write_addr [4:0] $end
$var wire 32 = reg_read_b [31:0] $end
$var wire 32 > reg_read_a [31:0] $end
$var wire 32 ? pc_out [31:0] $end
$var wire 32 @ pc_in [31:0] $end
$var wire 32 A pc4 [31:0] $end
$var wire 1 B memtoreg $end
$var wire 1 C lt $end
$var wire 32 D lo [31:0] $end
$var wire 32 E link_data [31:0] $end
$var wire 1 F jump $end
$var wire 32 G imm [31:0] $end
$var wire 32 H hi [31:0] $end
$var wire 1 I eq $end
$var wire 1 $ data_write $end
$var wire 1 & data_read $end
$var wire 32 J data_address [31:0] $end
$var wire 1 K branch $end
$var wire 1 L alusrc $end
$var wire 32 M aluout [31:0] $end
$var wire 2 N alucwire [1:0] $end
$var wire 4 O alucon [3:0] $end
$var wire 32 P alub [31:0] $end
$var reg 1 ( active $end
$var reg 5 Q addrd [4:0] $end
$var reg 5 R addrs [4:0] $end
$var reg 5 S addrt [4:0] $end
$var reg 32 T alub_in [31:0] $end
$var reg 32 U data_writedata [31:0] $end
$var reg 6 V func [5:0] $end
$var reg 6 W insop [5:0] $end
$var reg 32 X mem_addr_hold [31:0] $end
$var reg 5 Y reg_write_addr_hold [4:0] $end
$var reg 32 Z reg_write_data_1 [31:0] $end
$var reg 32 [ register_v0 [31:0] $end
$scope module alu_block $end
$var wire 32 \ alub [31:0] $end
$var wire 1 5 unsign $end
$var wire 32 ] reg_read_a [31:0] $end
$var wire 4 ^ ALUcon [3:0] $end
$var reg 32 _ ALUoutput [31:0] $end
$var reg 1 I eq $end
$var reg 32 ` hi [31:0] $end
$var reg 32 a lo [31:0] $end
$var reg 1 C lt $end
$var reg 64 b multiplier [63:0] $end
$upscope $end
$scope module alucontrol_block $end
$var wire 6 c func [5:0] $end
$var wire 6 d op [5:0] $end
$var wire 2 e ALUop [1:0] $end
$var reg 4 f ALUcon [3:0] $end
$upscope $end
$scope module branch_data_block $end
$var wire 32 g imm [31:0] $end
$var wire 6 h insop [5:0] $end
$var reg 32 i alub [31:0] $end
$upscope $end
$scope module control_block $end
$var wire 5 j branchfield [4:0] $end
$var wire 6 k func [5:0] $end
$var wire 6 l insop [5:0] $end
$var wire 1 7 regwrite $end
$var wire 1 8 regdst $end
$var wire 1 $ memwrite $end
$var wire 1 B memtoreg $end
$var wire 1 & memread $end
$var wire 1 F jump $end
$var wire 1 K branch $end
$var wire 1 L ALUsrc $end
$var wire 2 m ALUop [1:0] $end
$var reg 10 n controlsig [9:0] $end
$upscope $end
$scope module dac_block $end
$var wire 32 o address [31:0] $end
$var wire 32 p instruction [31:0] $end
$var reg 32 q address_out [31:0] $end
$upscope $end
$scope module hilo_block $end
$var wire 6 r func [5:0] $end
$var wire 32 s hi_in [31:0] $end
$var wire 6 t insop [5:0] $end
$var wire 32 u lo_in [31:0] $end
$var wire 32 v reg_read_a [31:0] $end
$var reg 32 w hi [31:0] $end
$var reg 32 x lo [31:0] $end
$upscope $end
$scope module link_block $end
$var wire 32 y instruction [31:0] $end
$var wire 5 z reg_write_addr_in [4:0] $end
$var wire 32 { old_reg_data [31:0] $end
$var wire 32 | new_reg_data [31:0] $end
$var reg 32 } new_reg_write_data [31:0] $end
$var reg 5 ~ reg_write_addr_out [4:0] $end
$upscope $end
$scope module load_block $end
$var wire 32 !" instruction [31:0] $end
$var wire 32 "" read_data [31:0] $end
$var reg 32 #" out [31:0] $end
$var reg 32 $" reg_data [31:0] $end
$upscope $end
$scope module lw_block $end
$var wire 32 %" instruction [31:0] $end
$var wire 32 &" mem_address [31:0] $end
$var wire 32 '" read_data [31:0] $end
$var wire 32 (" reg_d [31:0] $end
$var reg 32 )" out [31:0] $end
$var reg 32 *" reg_data [31:0] $end
$upscope $end
$scope module pc_block $end
$var wire 1 ) clk $end
$var wire 1 * clk_enable $end
$var wire 32 +" pc_in [31:0] $end
$var reg 32 ," pc_out [31:0] $end
$upscope $end
$scope module pcupdate_block $end
$var wire 1 K branch $end
$var wire 1 I eq $end
$var wire 32 -" immediate [31:0] $end
$var wire 32 ." instruction [31:0] $end
$var wire 1 F jump $end
$var wire 1 C lt $end
$var wire 32 /" pc4 [31:0] $end
$var wire 1 , reset $end
$var wire 32 0" target [31:0] $end
$var wire 32 1" reg_read [31:0] $end
$var reg 32 2" out [31:0] $end
$var reg 32 3" pc_out [31:0] $end
$var reg 32 4" reg_out [31:0] $end
$var reg 32 5" shift [31:0] $end
$upscope $end
$scope module regfile $end
$var wire 5 6" address_1 [4:0] $end
$var wire 5 7" address_2 [4:0] $end
$var wire 1 ) clk $end
$var wire 1 * clk_enable $end
$var wire 1 , reset $end
$var wire 5 8" write_address [4:0] $end
$var wire 32 9" write_data [31:0] $end
$var wire 1 7 write_enable $end
$var reg 5 :" c [4:0] $end
$var reg 32 ;" d [31:0] $end
$var reg 32 <" read_data1 [31:0] $end
$var reg 32 =" read_data2 [31:0] $end
$upscope $end
$scope module unsign_block $end
$var wire 32 >" instruction [31:0] $end
$var reg 1 5 unsign $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100100001001000000000000100000 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b100000 9"
b100 8"
b100 7"
b1 6"
bx 5"
bx 4"
b100 3"
bx 2"
b0 1"
b100100000000000010000000 0"
b100 /"
b100100001001000000000000100000 ."
b100000 -"
b0 ,"
b100 +"
b100000 *"
b100000 )"
b0 ("
b100000 '"
b100000 &"
b100100001001000000000000100000 %"
b100000 $"
b100000 #"
b100000 ""
b100100001001000000000000100000 !"
b100 ~
b100000 }
bx |
b100000 {
b100 z
b100100001001000000000000100000 y
bx x
bx w
b0 v
b0 u
b1001 t
b0 s
b100000 r
b100000 q
b100100001001000000000000100000 p
b100000 o
b1111 n
b11 m
b1001 l
b100000 k
b100 j
b100000 i
b1001 h
b100000 g
b0 f
b11 e
b1001 d
b100000 c
bx b
b0 a
b0 `
b100000 _
b0 ^
b0 ]
b100000 \
bx [
b100000 Z
b100 Y
b100000 X
b1001 W
b100000 V
b0 U
b100000 T
b100 S
b1 R
b0 Q
b100000 P
b0 O
b11 N
b100000 M
1L
0K
b100000 J
0I
b0 H
b100000 G
0F
bx E
b0 D
0C
0B
b100 A
b100 @
b0 ?
b0 >
b0 =
b100 <
b100000 ;
b100000 :
b100000 9
08
17
b100100000000000010000000 6
15
b100100001001000000000000100000 4
b100100001001000000000000100000 3
b0 2
bx 1
bx 0
b1000000000000 /
b100000 .
b0 -
0,
b100100001001000000000000100000 +
1*
1)
x(
b100000 '
0&
bx %
0$
b0 #
b0 "
bx !
$end
#4
0)
#8
b0 ;
b0 }
b0 9"
b0 9
b0 {
b0 *"
b0 )"
b0 '
b0 .
b0 J
b0 q
b0 &"
b0 :
b0 $"
b0 '"
b0 #"
b0 X
b0 o
b0 Z
b0 ""
b0 M
b0 _
b0 T
b0 \
1$
07
b0 P
b0 i
b100111 n
b0 G
b0 g
b0 -"
b100000000000000000000 6
b100000000000000000000 0"
b0 V
b0 c
b0 k
b0 r
b101011 W
b101011 d
b101011 h
b101011 l
b101011 t
b0 R
b0 6"
b1000 @
b1000 +"
b1000 3"
b10101100000001000000000000000000 4
b10101100000001000000000000000000 p
b10101100000001000000000000000000 y
b10101100000001000000000000000000 !"
b10101100000001000000000000000000 %"
b10101100000001000000000000000000 ."
b10101100000001000000000000000000 >"
b10101100000001000000000000000000 +
b10101100000001000000000000000000 3
b1000 A
b1000 /"
b100 "
b100 2
b100 ?
b100 ,"
b100000 #
b100000 -
b100000 U
b100000 =
b100000 ("
b100000 ="
1)
#12
0)
#16
b100000 ;
b100000 }
b100000 9"
b100000 9
b100000 {
b100000 *"
b100000 )"
b100000 '
b100000 .
b100000 J
b100000 q
b100000 &"
b100000 :
b100000 $"
b100000 '"
b100000 #"
b100000 X
b100000 o
b100000 Z
b100000 ""
b100000 M
b100000 _
b100000 >
b100000 ]
b100000 v
b100000 1"
b100000 <"
b10000100000000000000000000 6
b10000100000000000000000000 0"
b100 R
b100 6"
b1100 @
b1100 +"
b1100 3"
b10101100100001000000000000000000 4
b10101100100001000000000000000000 p
b10101100100001000000000000000000 y
b10101100100001000000000000000000 !"
b10101100100001000000000000000000 %"
b10101100100001000000000000000000 ."
b10101100100001000000000000000000 >"
b10101100100001000000000000000000 +
b10101100100001000000000000000000 3
b1100 A
b1100 /"
b1000 "
b1000 2
b1000 ?
b1000 ,"
1)
#20
0)
#24
b100001 ;
b100001 }
b100001 9"
b100001 9
b100001 {
b100001 *"
b100001 )"
b100001 '
b100001 .
b100001 J
b100001 q
b100001 &"
b100001 :
b100001 $"
b100001 '"
b100001 #"
b100001 X
b100001 o
b100001 Z
b100001 ""
b100001 M
b100001 _
b1 T
b1 \
b1 P
b1 i
b1 G
b1 g
b1 -"
b10000100000000000000000100 6
b10000100000000000000000100 0"
b1 V
b1 c
b1 k
b1 r
b10000 @
b10000 +"
b10000 3"
b10101100100001000000000000000001 4
b10101100100001000000000000000001 p
b10101100100001000000000000000001 y
b10101100100001000000000000000001 !"
b10101100100001000000000000000001 %"
b10101100100001000000000000000001 ."
b10101100100001000000000000000001 >"
b10101100100001000000000000000001 +
b10101100100001000000000000000001 3
b10000 A
b10000 /"
b1100 "
b1100 2
b1100 ?
b1100 ,"
1)
#28
0)
#32
b100000 ;
b100000 }
b100000 9"
b100000 9
b100000 {
b100000 *"
b100000 )"
b100000 %
b100000 0
b100000 1
b0 '
b0 .
b0 J
b0 q
b0 &"
b100000 :
b100000 $"
b100000 '"
b100000 #"
1&
0$
1B
17
b0 #
b0 -
b0 U
b0 X
b0 o
b0 T
b0 \
b100000 Z
b100000 ""
b0 M
b0 _
b0 P
b0 i
b1011111 n
b0 =
b0 ("
b0 ="
b0 >
b0 ]
b0 v
b0 1"
b0 <"
b0 G
b0 g
b0 -"
b101000000000000000000 6
b101000000000000000000 0"
b101 <
b101 ~
b101 8"
b101 Y
b101 z
b0 V
b0 c
b0 k
b0 r
b100011 W
b100011 d
b100011 h
b100011 l
b100011 t
b101 S
b101 j
b101 7"
b0 R
b0 6"
b10100 @
b10100 +"
b10100 3"
b10001100000001010000000000000000 4
b10001100000001010000000000000000 p
b10001100000001010000000000000000 y
b10001100000001010000000000000000 !"
b10001100000001010000000000000000 %"
b10001100000001010000000000000000 ."
b10001100000001010000000000000000 >"
b10001100000001010000000000000000 +
b10001100000001010000000000000000 3
b10100 A
b10100 /"
b10000 "
b10000 2
b10000 ?
b10000 ,"
1)
#36
0)
#40
b0 ;
b0 }
b0 9"
b0 9
b0 {
b0 *"
b0 )"
b0 :
b0 $"
b0 '"
b0 #"
b0 Z
b0 ""
b0 %
b0 0
b0 1
b100000 '
b100000 .
b100000 J
b100000 q
b100000 &"
b100000 X
b100000 o
b100000 M
b100000 _
b100000 >
b100000 ]
b100000 v
b100000 1"
b100000 <"
b10000101000000000000000000 6
b10000101000000000000000000 0"
b100 R
b100 6"
b11000 @
b11000 +"
b11000 3"
b10001100100001010000000000000000 4
b10001100100001010000000000000000 p
b10001100100001010000000000000000 y
b10001100100001010000000000000000 !"
b10001100100001010000000000000000 %"
b10001100100001010000000000000000 ."
b10001100100001010000000000000000 >"
b10001100100001010000000000000000 +
b10001100100001010000000000000000 3
b11000 A
b11000 /"
b10100 "
b10100 2
b10100 ?
b10100 ,"
b100000 #
b100000 -
b100000 U
b100000 =
b100000 ("
b100000 ="
1)
#44
0)
#48
b100000 ;
b100000 }
b100000 9"
b100000 9
b100000 {
b100000 *"
b100000 )"
b100000 :
b100000 $"
b100000 '"
b100000 #"
b100000 Z
b100000 ""
b100000 %
b100000 0
b100000 1
b100001 '
b100001 .
b100001 J
b100001 q
b100001 &"
b100001 X
b100001 o
b100001 M
b100001 _
b1 T
b1 \
b1 P
b1 i
b1 G
b1 g
b1 -"
b10000101000000000000000100 6
b10000101000000000000000100 0"
b1 V
b1 c
b1 k
b1 r
b11100 @
b11100 +"
b11100 3"
b10001100100001010000000000000001 4
b10001100100001010000000000000001 p
b10001100100001010000000000000001 y
b10001100100001010000000000000001 !"
b10001100100001010000000000000001 %"
b10001100100001010000000000000001 ."
b10001100100001010000000000000001 >"
b10001100100001010000000000000001 +
b10001100100001010000000000000001 3
b11100 A
b11100 /"
b11000 "
b11000 2
b11000 ?
b11000 ,"
b0 #
b0 -
b0 U
b0 =
b0 ("
b0 ="
1)
#52
0)
#56
b100000 @
b100000 +"
b100000 3"
b100000 A
b100000 /"
b11100 "
b11100 2
b11100 ?
b11100 ,"
b100000 #
b100000 -
b100000 U
b100000 =
b100000 ("
b100000 ="
1)
#60
0)
#64
b100100 @
b100100 +"
b100100 3"
b100100 A
b100100 /"
b100000 "
b100000 2
b100000 ?
b100000 ,"
1)
#68
0)
#72
b101000 @
b101000 +"
b101000 3"
b101000 A
b101000 /"
b100100 "
b100100 2
b100100 ?
b100100 ,"
1)
#76
0)
#80
b101100 @
b101100 +"
b101100 3"
b101100 A
b101100 /"
b101000 "
b101000 2
b101000 ?
b101000 ,"
1)
#84
0)
#88
b110000 @
b110000 +"
b110000 3"
b110000 A
b110000 /"
b101100 "
b101100 2
b101100 ?
b101100 ,"
1)
#92
0)
#96
b110100 @
b110100 +"
b110100 3"
b110100 A
b110100 /"
b110000 "
b110000 2
b110000 ?
b110000 ,"
1)
#100
0)
#104
b111000 @
b111000 +"
b111000 3"
b111000 A
b111000 /"
b110100 "
b110100 2
b110100 ?
b110100 ,"
1)
#108
0)
#112
b111100 @
b111100 +"
b111100 3"
b111100 A
b111100 /"
b111000 "
b111000 2
b111000 ?
b111000 ,"
1)
#116
0)
#120
b1000000 @
b1000000 +"
b1000000 3"
b1000000 A
b1000000 /"
b111100 "
b111100 2
b111100 ?
b111100 ,"
1)
#124
0)
#128
b1000100 @
b1000100 +"
b1000100 3"
b1000100 A
b1000100 /"
b1000000 "
b1000000 2
b1000000 ?
b1000000 ,"
1)
#132
0)
#136
b1001000 @
b1001000 +"
b1001000 3"
b1001000 A
b1001000 /"
b1000100 "
b1000100 2
b1000100 ?
b1000100 ,"
1)
#140
0)
#144
b1001100 @
b1001100 +"
b1001100 3"
b1001100 A
b1001100 /"
b1001000 "
b1001000 2
b1001000 ?
b1001000 ,"
1)
#148
0)
#152
b1010000 @
b1010000 +"
b1010000 3"
b1010000 A
b1010000 /"
b1001100 "
b1001100 2
b1001100 ?
b1001100 ,"
1)
#156
0)
#160
b1010100 @
b1010100 +"
b1010100 3"
b1010100 A
b1010100 /"
b1010000 "
b1010000 2
b1010000 ?
b1010000 ,"
1)
#164
0)
#168
b1011000 @
b1011000 +"
b1011000 3"
b1011000 A
b1011000 /"
b1010100 "
b1010100 2
b1010100 ?
b1010100 ,"
1)
#172
0)
#176
b1011100 @
b1011100 +"
b1011100 3"
b1011100 A
b1011100 /"
b1011000 "
b1011000 2
b1011000 ?
b1011000 ,"
1)
#180
0)
#184
b1100000 @
b1100000 +"
b1100000 3"
b1100000 A
b1100000 /"
b1011100 "
b1011100 2
b1011100 ?
b1011100 ,"
1)
#188
0)
#192
b1100100 @
b1100100 +"
b1100100 3"
b1100100 A
b1100100 /"
b1100000 "
b1100000 2
b1100000 ?
b1100000 ,"
1)
#196
0)
#200
b1101000 @
b1101000 +"
b1101000 3"
b1101000 A
b1101000 /"
b1100100 "
b1100100 2
b1100100 ?
b1100100 ,"
1)
#204
0)
#208
b1101100 @
b1101100 +"
b1101100 3"
b1101100 A
b1101100 /"
b1101000 "
b1101000 2
b1101000 ?
b1101000 ,"
1)
#212
0)
#216
b1110000 @
b1110000 +"
b1110000 3"
b1110000 A
b1110000 /"
b1101100 "
b1101100 2
b1101100 ?
b1101100 ,"
1)
#220
0)
#224
b1110100 @
b1110100 +"
b1110100 3"
b1110100 A
b1110100 /"
b1110000 "
b1110000 2
b1110000 ?
b1110000 ,"
1)
#228
0)
#232
b1111000 @
b1111000 +"
b1111000 3"
b1111000 A
b1111000 /"
b1110100 "
b1110100 2
b1110100 ?
b1110100 ,"
1)
#236
0)
#240
b1111100 @
b1111100 +"
b1111100 3"
b1111100 A
b1111100 /"
b1111000 "
b1111000 2
b1111000 ?
b1111000 ,"
1)
#244
0)
#248
b10000000 @
b10000000 +"
b10000000 3"
b10000000 A
b10000000 /"
b1111100 "
b1111100 2
b1111100 ?
b1111100 ,"
1)
#252
0)
#256
b10000100 @
b10000100 +"
b10000100 3"
b10000100 A
b10000100 /"
b10000000 "
b10000000 2
b10000000 ?
b10000000 ,"
1)
#260
0)
#264
b10001000 @
b10001000 +"
b10001000 3"
b10001000 A
b10001000 /"
b10000100 "
b10000100 2
b10000100 ?
b10000100 ,"
1)
#268
0)
#272
b10001100 @
b10001100 +"
b10001100 3"
b10001100 A
b10001100 /"
b10001000 "
b10001000 2
b10001000 ?
b10001000 ,"
1)
#276
0)
#280
b10010000 @
b10010000 +"
b10010000 3"
b10010000 A
b10010000 /"
b10001100 "
b10001100 2
b10001100 ?
b10001100 ,"
1)
#284
0)
#288
b10010100 @
b10010100 +"
b10010100 3"
b10010100 A
b10010100 /"
b10010000 "
b10010000 2
b10010000 ?
b10010000 ,"
1)
#292
0)
#296
b10011000 @
b10011000 +"
b10011000 3"
b10011000 A
b10011000 /"
b10010100 "
b10010100 2
b10010100 ?
b10010100 ,"
1)
#300
0)
#304
b10011100 @
b10011100 +"
b10011100 3"
b10011100 A
b10011100 /"
b10011000 "
b10011000 2
b10011000 ?
b10011000 ,"
1)
#308
0)
#312
b10100000 @
b10100000 +"
b10100000 3"
b10100000 A
b10100000 /"
b10011100 "
b10011100 2
b10011100 ?
b10011100 ,"
1)
#316
0)
#320
b10100100 @
b10100100 +"
b10100100 3"
b10100100 A
b10100100 /"
b10100000 "
b10100000 2
b10100000 ?
b10100000 ,"
1)
#324
0)
#328
b10101000 @
b10101000 +"
b10101000 3"
b10101000 A
b10101000 /"
b10100100 "
b10100100 2
b10100100 ?
b10100100 ,"
1)
#332
0)
#336
b10101100 @
b10101100 +"
b10101100 3"
b10101100 A
b10101100 /"
b10101000 "
b10101000 2
b10101000 ?
b10101000 ,"
1)
#340
0)
#344
b10110000 @
b10110000 +"
b10110000 3"
b10110000 A
b10110000 /"
b10101100 "
b10101100 2
b10101100 ?
b10101100 ,"
1)
#348
0)
#352
b10110100 @
b10110100 +"
b10110100 3"
b10110100 A
b10110100 /"
b10110000 "
b10110000 2
b10110000 ?
b10110000 ,"
1)
#356
0)
#360
b10111000 @
b10111000 +"
b10111000 3"
b10111000 A
b10111000 /"
b10110100 "
b10110100 2
b10110100 ?
b10110100 ,"
1)
#364
0)
#368
b10111100 @
b10111100 +"
b10111100 3"
b10111100 A
b10111100 /"
b10111000 "
b10111000 2
b10111000 ?
b10111000 ,"
1)
#372
0)
#376
b11000000 @
b11000000 +"
b11000000 3"
b11000000 A
b11000000 /"
b10111100 "
b10111100 2
b10111100 ?
b10111100 ,"
1)
#380
0)
#384
b11000100 @
b11000100 +"
b11000100 3"
b11000100 A
b11000100 /"
b11000000 "
b11000000 2
b11000000 ?
b11000000 ,"
1)
#388
0)
#392
b11001000 @
b11001000 +"
b11001000 3"
b11001000 A
b11001000 /"
b11000100 "
b11000100 2
b11000100 ?
b11000100 ,"
1)
#396
0)
#400
b11001100 @
b11001100 +"
b11001100 3"
b11001100 A
b11001100 /"
b11001000 "
b11001000 2
b11001000 ?
b11001000 ,"
1)
