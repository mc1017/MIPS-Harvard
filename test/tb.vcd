$date
	Mon Dec  6 23:00:50 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 32 ! register_v0 [31:0] $end
$var wire 32 " instr_address [31:0] $end
$var wire 32 # data_writedata [31:0] $end
$var wire 1 $ data_write $end
$var wire 32 % data_readdata [31:0] $end
$var wire 1 & data_read $end
$var wire 32 ' data_address [31:0] $end
$var wire 1 ( active $end
$var reg 1 ) clk $end
$var reg 1 * clk_enable $end
$var reg 32 + instr_readdata [31:0] $end
$var reg 1 , reset $end
$scope module dm $end
$var wire 1 ) clk $end
$var wire 1 * clock_enable $end
$var wire 1 , reset $end
$var wire 32 - write_data [31:0] $end
$var wire 1 $ write $end
$var wire 1 & read $end
$var wire 32 . address [31:0] $end
$var reg 32 / c [31:0] $end
$var reg 32 0 read_data [31:0] $end
$upscope $end
$scope module dut $end
$var wire 1 ) clk $end
$var wire 1 * clk_enable $end
$var wire 32 1 data_readdata [31:0] $end
$var wire 32 2 instr_address [31:0] $end
$var wire 32 3 instr_readdata [31:0] $end
$var wire 32 4 instruction [31:0] $end
$var wire 1 , reset $end
$var wire 1 5 unsign $end
$var wire 32 6 target [31:0] $end
$var wire 32 7 sa [31:0] $end
$var wire 1 8 regwrite $end
$var wire 1 9 regdst $end
$var wire 32 : reg_write_data_3 [31:0] $end
$var wire 32 ; reg_write_data_2 [31:0] $end
$var wire 32 < reg_write_data [31:0] $end
$var wire 5 = reg_write_addr [4:0] $end
$var wire 32 > reg_read_b [31:0] $end
$var wire 32 ? reg_read_a [31:0] $end
$var wire 32 @ pc_out [31:0] $end
$var wire 32 A pc_in [31:0] $end
$var wire 32 B pc4 [31:0] $end
$var wire 1 C memtoreg $end
$var wire 1 D lt $end
$var wire 32 E lo [31:0] $end
$var wire 32 F link_data [31:0] $end
$var wire 1 G jump $end
$var wire 32 H imm [31:0] $end
$var wire 32 I hi [31:0] $end
$var wire 1 J eq $end
$var wire 1 $ data_write $end
$var wire 1 & data_read $end
$var wire 32 K data_address [31:0] $end
$var wire 1 L branch $end
$var wire 1 M alusrc $end
$var wire 32 N aluout [31:0] $end
$var wire 2 O alucwire [1:0] $end
$var wire 4 P alucon [3:0] $end
$var wire 32 Q alub1 [31:0] $end
$var wire 32 R alua_in [31:0] $end
$var reg 1 ( active $end
$var reg 5 S addrd [4:0] $end
$var reg 5 T addrs [4:0] $end
$var reg 5 U addrt [4:0] $end
$var reg 32 V alub_in [31:0] $end
$var reg 32 W data_writedata [31:0] $end
$var reg 6 X func [5:0] $end
$var reg 6 Y insop [5:0] $end
$var reg 32 Z mem_addr_hold [31:0] $end
$var reg 5 [ reg_write_addr_hold [4:0] $end
$var reg 32 \ reg_write_data_1 [31:0] $end
$var reg 32 ] register_v0 [31:0] $end
$scope module alu_block $end
$var wire 32 ^ alub [31:0] $end
$var wire 1 5 unsign $end
$var wire 32 _ reg_read_a [31:0] $end
$var wire 4 ` ALUcon [3:0] $end
$var reg 32 a ALUoutput [31:0] $end
$var reg 1 J eq $end
$var reg 32 b hi [31:0] $end
$var reg 32 c lo [31:0] $end
$var reg 1 D lt $end
$var reg 64 d multiplier [63:0] $end
$upscope $end
$scope module alucontrol_block $end
$var wire 6 e func [5:0] $end
$var wire 6 f op [5:0] $end
$var wire 2 g ALUop [1:0] $end
$var reg 4 h ALUcon [3:0] $end
$upscope $end
$scope module branch_data_block $end
$var wire 32 i imm [31:0] $end
$var wire 6 j insop [5:0] $end
$var reg 32 k alub [31:0] $end
$upscope $end
$scope module control_block $end
$var wire 5 l branchfield [4:0] $end
$var wire 6 m func [5:0] $end
$var wire 6 n insop [5:0] $end
$var wire 1 8 regwrite $end
$var wire 1 9 regdst $end
$var wire 1 $ memwrite $end
$var wire 1 C memtoreg $end
$var wire 1 & memread $end
$var wire 1 G jump $end
$var wire 1 L branch $end
$var wire 1 M ALUsrc $end
$var wire 2 o ALUop [1:0] $end
$var reg 10 p controlsig [9:0] $end
$upscope $end
$scope module dac_block $end
$var wire 32 q address [31:0] $end
$var wire 32 r instruction [31:0] $end
$var reg 32 s address_out [31:0] $end
$upscope $end
$scope module hilo_block $end
$var wire 6 t func [5:0] $end
$var wire 32 u hi_in [31:0] $end
$var wire 6 v insop [5:0] $end
$var wire 32 w lo_in [31:0] $end
$var wire 32 x reg_read_a [31:0] $end
$var reg 32 y hi [31:0] $end
$var reg 32 z lo [31:0] $end
$upscope $end
$scope module link_block $end
$var wire 32 { instruction [31:0] $end
$var wire 5 | reg_write_addr_in [4:0] $end
$var wire 32 } old_reg_data [31:0] $end
$var wire 32 ~ new_reg_data [31:0] $end
$var reg 32 !" new_reg_write_data [31:0] $end
$var reg 5 "" reg_write_addr_out [4:0] $end
$upscope $end
$scope module load_block $end
$var wire 32 #" instruction [31:0] $end
$var wire 32 $" read_data [31:0] $end
$var reg 32 %" out [31:0] $end
$var reg 32 &" reg_data [31:0] $end
$upscope $end
$scope module lw_block $end
$var wire 32 '" instruction [31:0] $end
$var wire 32 (" mem_address [31:0] $end
$var wire 32 )" read_data [31:0] $end
$var wire 32 *" reg_d [31:0] $end
$var reg 32 +" out [31:0] $end
$var reg 32 ," reg_data [31:0] $end
$upscope $end
$scope module pc_block $end
$var wire 1 ) clk $end
$var wire 1 * clk_enable $end
$var wire 32 -" pc_in [31:0] $end
$var reg 32 ." pc_out [31:0] $end
$upscope $end
$scope module pcupdate_block $end
$var wire 1 L branch $end
$var wire 1 J eq $end
$var wire 32 /" immediate [31:0] $end
$var wire 32 0" instruction [31:0] $end
$var wire 1 G jump $end
$var wire 1 D lt $end
$var wire 32 1" pc4 [31:0] $end
$var wire 1 , reset $end
$var wire 32 2" target [31:0] $end
$var wire 32 3" reg_read [31:0] $end
$var reg 32 4" out [31:0] $end
$var reg 32 5" pc_out [31:0] $end
$var reg 32 6" reg_out [31:0] $end
$var reg 32 7" shift [31:0] $end
$upscope $end
$scope module regfile $end
$var wire 5 8" address_1 [4:0] $end
$var wire 5 9" address_2 [4:0] $end
$var wire 1 ) clk $end
$var wire 1 * clk_enable $end
$var wire 1 , reset $end
$var wire 5 :" write_address [4:0] $end
$var wire 32 ;" write_data [31:0] $end
$var wire 1 8 write_enable $end
$var reg 5 <" c [4:0] $end
$var reg 32 =" d [31:0] $end
$var reg 32 >" read_data1 [31:0] $end
$var reg 32 ?" read_data2 [31:0] $end
$upscope $end
$scope module shift_control_block $end
$var wire 32 @" instruction [31:0] $end
$var wire 32 A" org_data [31:0] $end
$var wire 32 B" sa [31:0] $end
$var reg 32 C" alu_in [31:0] $end
$upscope $end
$scope module unsign_block $end
$var wire 32 D" instruction [31:0] $end
$var reg 1 5 unsign $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100100001001000000000000100000 D"
b0 C"
b0 B"
b0 A"
b100100001001000000000000100000 @"
b0 ?"
b0 >"
b0 ="
b0 <"
b100000 ;"
b100 :"
b100 9"
b1 8"
bx 7"
bx 6"
b100 5"
bx 4"
b0 3"
b100100000000000010000000 2"
b100 1"
b100100001001000000000000100000 0"
b100000 /"
b0 ."
b100 -"
b100000 ,"
b100000 +"
b0 *"
b100000 )"
b100000 ("
b100100001001000000000000100000 '"
b100000 &"
b100000 %"
b100000 $"
b100100001001000000000000100000 #"
b100 ""
b100000 !"
bx ~
b100000 }
b100 |
b100100001001000000000000100000 {
bx z
bx y
b0 x
b0 w
b1001 v
b0 u
b100000 t
b100000 s
b100100001001000000000000100000 r
b100000 q
b1111 p
b11 o
b1001 n
b100000 m
b100 l
b100000 k
b1001 j
b100000 i
b0 h
b11 g
b1001 f
b100000 e
bx d
b0 c
b0 b
b100000 a
b0 `
b0 _
b100000 ^
bx ]
b100000 \
b100 [
b100000 Z
b1001 Y
b100000 X
b0 W
b100000 V
b100 U
b1 T
b0 S
b0 R
b100000 Q
b0 P
b11 O
b100000 N
1M
0L
b100000 K
0J
b0 I
b100000 H
0G
bx F
b0 E
0D
0C
b100 B
b100 A
b0 @
b0 ?
b0 >
b100 =
b100000 <
b100000 ;
b100000 :
09
18
b0 7
b100100000000000010000000 6
15
b100100001001000000000000100000 4
b100100001001000000000000100000 3
b0 2
bx 1
bx 0
b1000000000000 /
b100000 .
b0 -
0,
b100100001001000000000000100000 +
1*
1)
x(
b100000 '
0&
bx %
0$
b0 #
b0 "
bx !
$end
#4
0)
#8
b100 <
b100 !"
b100 ;"
b100 :
b100 }
b100 ,"
b100 +"
b100 '
b100 .
b100 K
b100 s
b100 ("
b100 ;
b100 &"
b100 )"
b100 %"
b100 Z
b100 q
b100 \
b100 $"
b100 N
b100 a
b100 V
b100 ^
b100 Q
b100 k
b100 H
b100 i
b100 /"
b100011000000000000010000 6
b100011000000000000010000 2"
b11 =
b11 ""
b11 :"
b11 [
b11 |
b100 X
b100 e
b100 m
b100 t
b11 U
b11 l
b11 9"
b1000 A
b1000 -"
b1000 5"
b100100001000110000000000000100 4
b100100001000110000000000000100 r
b100100001000110000000000000100 {
b100100001000110000000000000100 #"
b100100001000110000000000000100 '"
b100100001000110000000000000100 0"
b100100001000110000000000000100 @"
b100100001000110000000000000100 D"
b100100001000110000000000000100 +
b100100001000110000000000000100 3
b1000 B
b1000 1"
b100 "
b100 2
b100 @
b100 ."
b0 #
b0 -
b0 W
b0 >
b0 *"
b0 ?"
1)
#12
0)
#16
b1000000000 <
b1000000000 !"
b1000000000 ;"
b1000000000 :
b1000000000 }
b1000000000 ,"
b1000000000 +"
b1000000000 '
b1000000000 .
b1000000000 K
b1000000000 s
b1000000000 ("
b1000000000 ;
b1000000000 &"
b1000000000 )"
b1000000000 %"
b1000000000 Z
b1000000000 q
b1000000000 \
b1000000000 $"
b111 P
b111 `
b111 h
b1000000000 N
b1000000000 a
19
0M
b0 O
b0 g
b0 o
b100000 V
b100000 ^
b100 R
b100 _
b100 C"
b10100100000000 Q
b10100100000000 k
b1000001000 p
b10100100000000 H
b10100100000000 i
b10100100000000 /"
b100001010010000000000 6
b100001010010000000000 2"
b100 7
b100 B"
b101 =
b101 ""
b101 :"
b101 [
b101 |
b0 X
b0 e
b0 m
b0 t
b0 Y
b0 f
b0 j
b0 n
b0 v
b101 S
b100 U
b100 l
b100 9"
b0 T
b0 8"
b1100 A
b1100 -"
b1100 5"
b1000010100100000000 4
b1000010100100000000 r
b1000010100100000000 {
b1000010100100000000 #"
b1000010100100000000 '"
b1000010100100000000 0"
b1000010100100000000 @"
b1000010100100000000 D"
b1000010100100000000 +
b1000010100100000000 3
b1100 B
b1100 1"
b1000 "
b1000 2
b1000 @
b1000 ."
b100000 #
b100000 -
b100000 W
b100000 >
b100000 *"
b100000 ?"
1)
#20
0)
#24
b1000000000 <
b1000000000 !"
b1000000000 ;"
b1000000000 :
b1000000000 }
b1000000000 ,"
b1000000000 +"
b1000000000 '
b1000000000 .
b1000000000 K
b1000000000 s
b1000000000 ("
b1000000000 ;
b1000000000 &"
b1000000000 )"
b1000000000 %"
b1000000000 Z
b1000000000 q
b1000000000 \
b1000000000 $"
b10100000000100 Q
b10100000000100 k
b1000000000 N
b1000000000 a
b100 ?
b100 x
b100 3"
b100 >"
b100 A"
b10100000000100 H
b10100000000100 i
b10100000000100 /"
b1100100001010000000010000 6
b1100100001010000000010000 2"
b0 7
b0 B"
b100 R
b100 _
b100 C"
b100 X
b100 e
b100 m
b100 t
b11 T
b11 8"
b10000 A
b10000 -"
b10000 5"
b11001000010100000000100 4
b11001000010100000000100 r
b11001000010100000000100 {
b11001000010100000000100 #"
b11001000010100000000100 '"
b11001000010100000000100 0"
b11001000010100000000100 @"
b11001000010100000000100 D"
b11001000010100000000100 +
b11001000010100000000100 3
b10000 B
b10000 1"
b1100 "
b1100 2
b1100 @
b1100 ."
1)
#28
0)
#32
b10 <
b10 !"
b10 ;"
b10 :
b10 }
b10 ,"
b10 +"
b10 '
b10 .
b10 K
b10 s
b10 ("
b10 ;
b10 &"
b10 )"
b10 %"
b10 Z
b10 q
b10 \
b10 $"
b10100100000011 Q
b10100100000011 k
b10 N
b10 a
b1001 P
b1001 `
b1001 h
b0 ?
b0 x
b0 3"
b0 >"
b0 A"
b10100100000011 H
b10100100000011 i
b10100100000011 /"
b100001010010000001100 6
b100001010010000001100 2"
b100 7
b100 B"
b100 R
b100 _
b100 C"
b11 X
b11 e
b11 m
b11 t
b0 T
b0 8"
b10100 A
b10100 -"
b10100 5"
b1000010100100000011 4
b1000010100100000011 r
b1000010100100000011 {
b1000010100100000011 #"
b1000010100100000011 '"
b1000010100100000011 0"
b1000010100100000011 @"
b1000010100100000011 D"
b1000010100100000011 +
b1000010100100000011 3
b10100 B
b10100 1"
b10000 "
b10000 2
b10000 @
b10000 ."
1)
#36
0)
#40
b10 <
b10 !"
b10 ;"
b10 :
b10 }
b10 ,"
b10 +"
b10 '
b10 .
b10 K
b10 s
b10 ("
b10 ;
b10 &"
b10 )"
b10 %"
b10 Z
b10 q
b10 \
b10 $"
b10100000000111 Q
b10100000000111 k
b10 N
b10 a
b100 ?
b100 x
b100 3"
b100 >"
b100 A"
b10100000000111 H
b10100000000111 i
b10100000000111 /"
b1100100001010000000011100 6
b1100100001010000000011100 2"
b0 7
b0 B"
b100 R
b100 _
b100 C"
b111 X
b111 e
b111 m
b111 t
b11 T
b11 8"
b11000 A
b11000 -"
b11000 5"
b11001000010100000000111 4
b11001000010100000000111 r
b11001000010100000000111 {
b11001000010100000000111 #"
b11001000010100000000111 '"
b11001000010100000000111 0"
b11001000010100000000111 @"
b11001000010100000000111 D"
b11001000010100000000111 +
b11001000010100000000111 3
b11000 B
b11000 1"
b10100 "
b10100 2
b10100 @
b10100 ."
1)
#44
0)
#48
b10 <
b10 !"
b10 ;"
b10 :
b10 }
b10 ,"
b10 +"
b10 '
b10 .
b10 K
b10 s
b10 ("
b10 ;
b10 &"
b10 )"
b10 %"
b10 Z
b10 q
b10 \
b10 $"
b10100100000010 Q
b10100100000010 k
b10 N
b10 a
b1010 P
b1010 `
b1010 h
b0 ?
b0 x
b0 3"
b0 >"
b0 A"
b10100100000010 H
b10100100000010 i
b10100100000010 /"
b100001010010000001000 6
b100001010010000001000 2"
b100 7
b100 B"
b100 R
b100 _
b100 C"
b10 X
b10 e
b10 m
b10 t
b0 T
b0 8"
b11100 A
b11100 -"
b11100 5"
b1000010100100000010 4
b1000010100100000010 r
b1000010100100000010 {
b1000010100100000010 #"
b1000010100100000010 '"
b1000010100100000010 0"
b1000010100100000010 @"
b1000010100100000010 D"
b1000010100100000010 +
b1000010100100000010 3
b11100 B
b11100 1"
b11000 "
b11000 2
b11000 @
b11000 ."
1)
#52
0)
#56
b10 <
b10 !"
b10 ;"
b10 :
b10 }
b10 ,"
b10 +"
b10 '
b10 .
b10 K
b10 s
b10 ("
b10 ;
b10 &"
b10 )"
b10 %"
b10 Z
b10 q
b10 \
b10 $"
b10100000000110 Q
b10100000000110 k
b10 N
b10 a
b100 ?
b100 x
b100 3"
b100 >"
b100 A"
b10100000000110 H
b10100000000110 i
b10100000000110 /"
b1100100001010000000011000 6
b1100100001010000000011000 2"
b0 7
b0 B"
b100 R
b100 _
b100 C"
b110 X
b110 e
b110 m
b110 t
b11 T
b11 8"
b100000 A
b100000 -"
b100000 5"
b11001000010100000000110 4
b11001000010100000000110 r
b11001000010100000000110 {
b11001000010100000000110 #"
b11001000010100000000110 '"
b11001000010100000000110 0"
b11001000010100000000110 @"
b11001000010100000000110 D"
b11001000010100000000110 +
b11001000010100000000110 3
b100000 B
b100000 1"
b11100 "
b11100 2
b11100 @
b11100 ."
1)
#60
0)
#64
b100100 A
b100100 -"
b100100 5"
b100100 B
b100100 1"
b100000 "
b100000 2
b100000 @
b100000 ."
1)
#68
0)
#72
b101000 A
b101000 -"
b101000 5"
b101000 B
b101000 1"
b100100 "
b100100 2
b100100 @
b100100 ."
1)
#76
0)
#80
b101100 A
b101100 -"
b101100 5"
b101100 B
b101100 1"
b101000 "
b101000 2
b101000 @
b101000 ."
1)
#84
0)
#88
b110000 A
b110000 -"
b110000 5"
b110000 B
b110000 1"
b101100 "
b101100 2
b101100 @
b101100 ."
1)
#92
0)
#96
b110100 A
b110100 -"
b110100 5"
b110100 B
b110100 1"
b110000 "
b110000 2
b110000 @
b110000 ."
1)
#100
0)
#104
b111000 A
b111000 -"
b111000 5"
b111000 B
b111000 1"
b110100 "
b110100 2
b110100 @
b110100 ."
1)
#108
0)
#112
b111100 A
b111100 -"
b111100 5"
b111100 B
b111100 1"
b111000 "
b111000 2
b111000 @
b111000 ."
1)
#116
0)
#120
b1000000 A
b1000000 -"
b1000000 5"
b1000000 B
b1000000 1"
b111100 "
b111100 2
b111100 @
b111100 ."
1)
#124
0)
#128
b1000100 A
b1000100 -"
b1000100 5"
b1000100 B
b1000100 1"
b1000000 "
b1000000 2
b1000000 @
b1000000 ."
1)
#132
0)
#136
b1001000 A
b1001000 -"
b1001000 5"
b1001000 B
b1001000 1"
b1000100 "
b1000100 2
b1000100 @
b1000100 ."
1)
#140
0)
#144
b1001100 A
b1001100 -"
b1001100 5"
b1001100 B
b1001100 1"
b1001000 "
b1001000 2
b1001000 @
b1001000 ."
1)
#148
0)
#152
b1010000 A
b1010000 -"
b1010000 5"
b1010000 B
b1010000 1"
b1001100 "
b1001100 2
b1001100 @
b1001100 ."
1)
#156
0)
#160
b1010100 A
b1010100 -"
b1010100 5"
b1010100 B
b1010100 1"
b1010000 "
b1010000 2
b1010000 @
b1010000 ."
1)
#164
0)
#168
b1011000 A
b1011000 -"
b1011000 5"
b1011000 B
b1011000 1"
b1010100 "
b1010100 2
b1010100 @
b1010100 ."
1)
#172
0)
#176
b1011100 A
b1011100 -"
b1011100 5"
b1011100 B
b1011100 1"
b1011000 "
b1011000 2
b1011000 @
b1011000 ."
1)
#180
0)
#184
b1100000 A
b1100000 -"
b1100000 5"
b1100000 B
b1100000 1"
b1011100 "
b1011100 2
b1011100 @
b1011100 ."
1)
#188
0)
#192
b1100100 A
b1100100 -"
b1100100 5"
b1100100 B
b1100100 1"
b1100000 "
b1100000 2
b1100000 @
b1100000 ."
1)
#196
0)
#200
b1101000 A
b1101000 -"
b1101000 5"
b1101000 B
b1101000 1"
b1100100 "
b1100100 2
b1100100 @
b1100100 ."
1)
#204
0)
#208
b1101100 A
b1101100 -"
b1101100 5"
b1101100 B
b1101100 1"
b1101000 "
b1101000 2
b1101000 @
b1101000 ."
1)
#212
0)
#216
b1110000 A
b1110000 -"
b1110000 5"
b1110000 B
b1110000 1"
b1101100 "
b1101100 2
b1101100 @
b1101100 ."
1)
#220
0)
#224
b1110100 A
b1110100 -"
b1110100 5"
b1110100 B
b1110100 1"
b1110000 "
b1110000 2
b1110000 @
b1110000 ."
1)
#228
0)
#232
b1111000 A
b1111000 -"
b1111000 5"
b1111000 B
b1111000 1"
b1110100 "
b1110100 2
b1110100 @
b1110100 ."
1)
#236
0)
#240
b1111100 A
b1111100 -"
b1111100 5"
b1111100 B
b1111100 1"
b1111000 "
b1111000 2
b1111000 @
b1111000 ."
1)
#244
0)
#248
b10000000 A
b10000000 -"
b10000000 5"
b10000000 B
b10000000 1"
b1111100 "
b1111100 2
b1111100 @
b1111100 ."
1)
#252
0)
#256
b10000100 A
b10000100 -"
b10000100 5"
b10000100 B
b10000100 1"
b10000000 "
b10000000 2
b10000000 @
b10000000 ."
1)
#260
0)
#264
b10001000 A
b10001000 -"
b10001000 5"
b10001000 B
b10001000 1"
b10000100 "
b10000100 2
b10000100 @
b10000100 ."
1)
#268
0)
#272
b10001100 A
b10001100 -"
b10001100 5"
b10001100 B
b10001100 1"
b10001000 "
b10001000 2
b10001000 @
b10001000 ."
1)
#276
0)
#280
b10010000 A
b10010000 -"
b10010000 5"
b10010000 B
b10010000 1"
b10001100 "
b10001100 2
b10001100 @
b10001100 ."
1)
#284
0)
#288
b10010100 A
b10010100 -"
b10010100 5"
b10010100 B
b10010100 1"
b10010000 "
b10010000 2
b10010000 @
b10010000 ."
1)
#292
0)
#296
b10011000 A
b10011000 -"
b10011000 5"
b10011000 B
b10011000 1"
b10010100 "
b10010100 2
b10010100 @
b10010100 ."
1)
#300
0)
#304
b10011100 A
b10011100 -"
b10011100 5"
b10011100 B
b10011100 1"
b10011000 "
b10011000 2
b10011000 @
b10011000 ."
1)
#308
0)
#312
b10100000 A
b10100000 -"
b10100000 5"
b10100000 B
b10100000 1"
b10011100 "
b10011100 2
b10011100 @
b10011100 ."
1)
#316
0)
#320
b10100100 A
b10100100 -"
b10100100 5"
b10100100 B
b10100100 1"
b10100000 "
b10100000 2
b10100000 @
b10100000 ."
1)
#324
0)
#328
b10101000 A
b10101000 -"
b10101000 5"
b10101000 B
b10101000 1"
b10100100 "
b10100100 2
b10100100 @
b10100100 ."
1)
#332
0)
#336
b10101100 A
b10101100 -"
b10101100 5"
b10101100 B
b10101100 1"
b10101000 "
b10101000 2
b10101000 @
b10101000 ."
1)
#340
0)
#344
b10110000 A
b10110000 -"
b10110000 5"
b10110000 B
b10110000 1"
b10101100 "
b10101100 2
b10101100 @
b10101100 ."
1)
#348
0)
#352
b10110100 A
b10110100 -"
b10110100 5"
b10110100 B
b10110100 1"
b10110000 "
b10110000 2
b10110000 @
b10110000 ."
1)
#356
0)
#360
b10111000 A
b10111000 -"
b10111000 5"
b10111000 B
b10111000 1"
b10110100 "
b10110100 2
b10110100 @
b10110100 ."
1)
#364
0)
#368
b10111100 A
b10111100 -"
b10111100 5"
b10111100 B
b10111100 1"
b10111000 "
b10111000 2
b10111000 @
b10111000 ."
1)
#372
0)
#376
b11000000 A
b11000000 -"
b11000000 5"
b11000000 B
b11000000 1"
b10111100 "
b10111100 2
b10111100 @
b10111100 ."
1)
#380
0)
#384
b11000100 A
b11000100 -"
b11000100 5"
b11000100 B
b11000100 1"
b11000000 "
b11000000 2
b11000000 @
b11000000 ."
1)
#388
0)
#392
b11001000 A
b11001000 -"
b11001000 5"
b11001000 B
b11001000 1"
b11000100 "
b11000100 2
b11000100 @
b11000100 ."
1)
#396
0)
#400
b11001100 A
b11001100 -"
b11001100 5"
b11001100 B
b11001100 1"
b11001000 "
b11001000 2
b11001000 @
b11001000 ."
1)
